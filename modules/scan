#!/bin/bash

Full_Scan() {
	ports=$1
	TitleMessage "Stage 3: Refined Scan"
	InfoMessage "Enumerating open ports"
	results=$(nmap -sC -sV -Pn -p"$ports" -oA "$resultsPath"/"$target" "$target")
	resultsFile=$resultsPath/$target.nmap
	SuccessMessage "Scanning Complete"
	Analyse_Results
}

Get_Open_Ports() {
	runtime=$(date)
	TitleMessage "Scanning"
	echo "$runtime" > "$resultsPath/runtime"
	InfoMessage "Scan started at: ${YELLOW} $runtime ${PLAIN}"
	top_ports_nmap=$(nmap -sT --top-ports 1000 -Pn -T4 "$target")
	top_ports=$(echo "$top_ports_nmap" | grep "^[0-9]" | cut -d '/' -f 1,3)
	top_ports_formatted=$(echo "$top_ports_nmap" | grep "^[0-9]" | awk -F '/tcp' '{print $1 " " $2}' | awk '{print $1 " " $3}')
	TitleMessage "Stage 1: Common Ports"
	InfoMessage "Scanning the top 1000 ports with nmap"
	echo "Out of the top 1000 ports, the following responded as OPEN. Investigate these ports further:"
	echo "$top_ports_formatted" | tee "$resultsPath"/top1000.txt
	if [[ "$top_ports" == *"$http"* || "$top_ports" == *"$https"* || "$top_ports" == *"$althttp"* ]]; then
		printf "* There's something running on one of the standard HTTP ports, so have a look for a website. \n "
		if [[ "$top_ports" == *"$http"* ]]; then
			printf "\t Port 80 is open --> Check http://%s \n" "$target"
		fi
		if [[ "$top_ports" == *"$https"* ]]; then
			printf "\t Port 443 is open --> Check https://%s \n" "$target"
		fi
		if [[ "$top_ports" == *"$althttp"* ]]; then
			printf "\t Port 8080 is open --> Check http://%s:8080 \n" "$target"
		fi
	fi
	if [[ "$top_ports" == *"$dns"* && "$top_ports" == *"$kerb"* && "$top_ports" == *"$ldap"* ]]; then
		printf "* %s could be a Domain Controller. \n Port 88 (Kerberos), 53 (DNS) and 389 (LDAP) are open on the host.\n" "$target"
	fi
	TitleMessage "Stage 2: All Ports"
	all_ports_nmap=$(nmap -sT -p- -Pn -T4 "$target")
	all_ports=$(echo "$all_ports_nmap" | grep "^[0-9]" | cut -d '/' -f 1,3)
	all_ports_formatted=$(echo "$all_ports_nmap" | grep "^[0-9]" | awk -F '/tcp' '{print $1 " " $2}' | awk '{print $1 " " $3}')
	if [[ "$top_ports" == "$all_ports" ]]; then
		FailedMessage "No new ports found"
		cp "$resultsPath"/top1000.txt "$resultsPath"/allports.txt
	else
		SuccessMessage "More ports found!"
		echo "The following ports responded as OPEN"
		echo "$all_ports_formatted" | tee "$resultsPath"/allports.txt
	fi
	listofports=$(echo "$all_ports" | tr '\n' ',' | sed s/,$//)
	Full_Scan "$listofports"
}